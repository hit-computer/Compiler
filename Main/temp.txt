movl $0x4c,-0x20(%ebp)
movl $0x52,-0x1c(%ebp)
movl $0x5a,-0x18(%ebp)
movl $0x56,-0x14(%ebp)
movl $0x4f,-0x10(%ebp)
movl $0x3e,-0xc(%ebp)
movl $0x5a,-0x8(%ebp)
movl $0x58,-0x4(%ebp)
movl $0x2,-0x40(%ebp)
movl $0x2,-0x3c(%ebp)
movl $0x1,-0x38(%ebp)
movl $0x2,-0x34(%ebp)
movl $0x2,-0x30(%ebp)
movl $0x3,-0x2c(%ebp)
movl $0x2,-0x28(%ebp)
movl $0x2,-0x24(%ebp)
movl $0x0,-0x4c(%ebp)
movl $0x0,-0x48(%ebp)
movl $0x0,-0x50(%ebp)
L0:cmpl $0x8,-0x50(%ebp)
jae L1
movl -0x50(%ebp),%ebx
mov -0x40(%ebp,%ebx,4),%ecx
movl -0x50(%ebp),%ebx
mov -0x20(%ebp,%ebx,4),%eax
imull %ecx,%eax
addl -0x48(%ebp),%eax
movl %eax,-0x48(%ebp)
addl $0x1,-0x50(%ebp)
jmp L0
L1:
L2:cmpl $0x0,-0x50(%ebp)
jz L3
movl -0x50(%ebp),%ebx
subl $0x1,%ebx
mov -0x40(%ebp,%ebx,4),%edx
addl -0x4c(%ebp),%edx
movl %edx,-0x4c(%ebp)
subl $0x1,-0x50(%ebp)
jmp L2
L3:
movl -0x48(%ebp),%eax
cltd
idivl -0x4c(%ebp)
movl %eax,-0x44(%ebp)
L4:cmpl $0x3c,-0x44(%ebp)
jb L5
movl -0x44(%ebp),%ebx
subl $0x3c,%ebx
movl %ebx,-0x44(%ebp)
pushl -0x44(%ebp)
pushl $text6
call _printf
jmp L6
L5:
movl $0x3c,%ebx
subl -0x44(%ebp),%ebx
movl %ebx,-0x44(%ebp)
pushl -0x44(%ebp)
pushl $text7
call _printf
L6:
movl $0x0,%eax
leave
ret

.section .data
text6: .ascii "Your score is %d higher than 60!\n\0"
text7: .ascii "Your score is %d lower than 60!\n\0"
